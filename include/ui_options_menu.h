#ifndef GUARD_UI_VISUAL_OPTION_H
#define GUARD_UI_VISUAL_OPTION_H

#include "main.h"
#include "constants/options_battle.h"

void Task_OpenOptionsMenuFromStartMenu(u8 taskId);
void Options_Menu_Init(MainCallback callback);
void CB2_InitUIOptionMenuFromMainMenu(void);
void CB2_InitUiOptionMenuFromDevLetter(void);
void SetUpMainMenuFromOutsideGame(void);
void OptionMenu_ResetAllToDefault(void);

enum OptionsIds
{
    GAME_SETTINGS,
    BATTLE_SETTINGS,
    VISUAL_SETTINGS,
    MUSIC_SETTINGS,
    RANDOM_SETTINGS,
	SETTINGS_COUNT,
};

#define NUM_OF_PRESET_OPTIONS SETTINGS_COUNT
#define NUM_OF_SCREENS SETTINGS_COUNT
#define NUM_OF_POSSIBLE_OPTIONS_THAT_FIT_ON_SCREEN SETTINGS_COUNT
#define MAX_OPTIONS_PER_SETTING NUM_OPTIONS_BATTLE_SETTINGS

enum GamePresetOptionsID
{
    GAME_PRESET_DEFAULT,
    GAME_PRESET_SPEEDRUN,
    GAME_PRESET_CUSTOM,
    GAME_PRESET_COUNT,
};

enum BattlePresetOptionsID
{
    BATTLE_PRESET_DEFAULT,
    BATTLE_PRESET_CHALLENGE,
    BATTLE_PRESET_SPEEDRUN,
    BATTLE_PRESET_NUZLOCKE,
    BATTLE_PRESET_KAIZO,
    BATTLE_PRESET_CUSTOM,
    BATTLE_PRESET_COUNT,
};

enum VisualPresetOptionsID
{
    VISUAL_PRESET_DEFAULT,
    VISUAL_PRESET_SPEEDRUN,
    VISUAL_PRESET_CUSTOM,
    VISUAL_PRESET_COUNT,
};

enum MusicPresetOptionsID
{
    MUSIC_PRESET_DEFAULT,
    MUSIC_PRESET_LGPE,
    MUSIC_PRESET_HGSS,
    MUSIC_PRESET_ORAS,
    MUSIC_PRESET_BDSP,
    MUSIC_PRESET_BW2,
    MUSIC_PRESET_XY,
    MUSIC_PRESET_USUM,
    MUSIC_PRESET_SWSH,
    MUSIC_PRESET_SV,
    MUSIC_PRESET_CUSTOM,
    MUSIC_PRESET_COUNT,
};

enum RandomPresetOptionsID
{
    RANDOM_PRESET_DEFAULT,
    RANDOM_PRESET_SANE,
    RANDOM_PRESET_CRAZY,
    RANDOM_PRESET_TOTAL_CHAOS,
    RANDOM_PRESET_CUSTOM,
    RANDOM_PRESET_COUNT,
};

enum RandomOptionsForOptionsMenu
{
    RANDOM_DEFAULT,
    RANDOM_RANDOM,
    RANDOM_CHAOS,
    RANDOM_COUNT,
};

enum optionsGameSaveBoot
{
    GAME_OPTION_SAVE_BOOT_TRADITIONAL,
    GAME_OPTION_SAVE_BOOT_CONTINUE,
    GAME_OPTION_SAVE_BOOT_COUNT,
};
enum optionsGameRunValues
{
    GAME_OPTION_RUN_ALWAYS,
    GAME_OPTION_RUN_TOGGLE,
    GAME_OPTION_RUN_MANUAL,
    GAME_OPTION_RUN_COUNT,
};

enum optionsBattlePerfectIVValues
{
    BATTLE_OPTION_PERFECTIV_DISABLED,
    BATTLE_OPTION_PERFECTIV_ENABLED,
    BATTLE_OPTION_PERFECTIV_COUNT,
};

enum optionsVisualTextSpeedValues
{
    VISUAL_OPTION_TEXTSPEED_SLOW,
    VISUAL_OPTION_TEXTSPEED_MEDIUM,
    VISUAL_OPTION_TEXTSPEED_FAST,
    VISUAL_OPTION_TEXTSPEED_INSTANT,
    VISUAL_OPTION_TEXTSPEED_COUNT,
};

enum optionsVisualColorVariationValues
{
    VISUAL_OPTION_COLOR_VARIATION_OFF,
    VISUAL_OPTION_COLOR_VARIATION_PERSONALITY,
    VISUAL_OPTION_COLOR_VARIATION_INDIVIDUAL_VALUES,
    VISUAL_OPTION_COLOR_VARIATION_NICKNAME,
    VISUAL_OPTION_COLOR_VARIATION_COUNT,
};

enum optionsBattleExperienceValues
{
    BATTLE_OPTION_EXPERIENCE_ALL,
    BATTLE_OPTION_EXPERIENCE_PARTY,
    BATTLE_OPTION_EXPERIENCE_ACTIVE,
    BATTLE_OPTION_EXPERIENCE_COUNT,
};

enum optionBattleExpMultiplerValues
{
    BATTLE_OPTION_MULTIPLIER_0,
    BATTLE_OPTION_MULTIPLIER_1,
    BATTLE_OPTION_MULTIPLIER_2,
    BATTLE_OPTION_MULTIPLIER_COUNT,
};

enum optionBattlePointsMessagesValues
{
	BATTLE_OPTION_POINTS_MESSAGES_ON,
	BATTLE_OPTION_POINTS_MESSAGES_OFF,
	BATTLE_OPTION_POINTS_MESSAGE_COUNT,
};

enum optionBattlePointsSummary
{
	BATTLE_OPTION_POINTS_SUMMARY_FAINT,
	BATTLE_OPTION_POINTS_SUMMARY_BATTLE,
	BATTLE_OPTION_POINTS_SUMMARY_OFF,
	BATTLE_OPTION_POINTS_SUMMARY_COUNT,
};

enum optionBattleMidBattleEvolutionValues
{
	BATTLE_OPTION_MID_BATTLE_EVOLUTION_ON,
	BATTLE_OPTION_MID_BATTLE_EVOLUTION_OFF,
	BATTLE_OPTION_MID_BATTLE_EVOLUTION_COUNT,
};

enum optionBattleEffortValues
{
    BATTLE_OPTION_EFFORT_VALUES_DISABLED,
    BATTLE_OPTION_EFFORT_VALUES_ENABLED,
    BATTLE_OPTION_EFFORT_VALUES_COUNT,
};

enum optionBattleIndividualValues
{
    BATTLE_OPTION_INDIVIDUAL_VALUES_DISABLED,
    BATTLE_OPTION_INDIVIDUAL_VALUES_ENABLED,
    BATTLE_OPTION_INDIVIDUAL_VALUES_COUNT,
};

enum optionBattleWhiteoutValues
{
    BATTLE_OPTION_WHITEOUT_RESPAWN,
    BATTLE_OPTION_WHITEOUT_DEATH,
    BATTLE_OPTION_WHITEOUT_COUNT,
};

enum optionBattleFaintedMonValues
{
    BATTLE_OPTION_FAINTED_MON_ALLOWED,
    BATTLE_OPTION_FAINTED_MON_BOX,
    BATTLE_OPTION_FAINTED_MON_RELEASE,
    BATTLE_OPTION_FAINTED_MON_COUNT,
};

enum optionBattleDifficulty
{
    BATTLE_OPTION_DIFFICULTY_EASY,
    BATTLE_OPTION_DIFFICULTY_NORMAL,
    BATTLE_OPTION_DIFFICULTY_HARD,
    BATTLE_OPTION_DIFFICULTY_COUNT,
};

enum optionBattleBagItemsValues
{
    BATTLE_OPTION_BAG_ITEMS_ALLOWED,
    BATTLE_OPTION_BAG_ITEMS_NO_BOSS,
    BATTLE_OPTION_BAG_ITEMS_NO_TRAINER,
    BATTLE_OPTION_BAG_ITEMS_4_ONLY,
    BATTLE_OPTION_BAG_ITEMS_NO_ITEMS,
    BATTLE_OPTION_BAG_ITEMS_COUNT,
};

enum optionBattleLevelValues
{
    BATTLE_OPTION_LEVEL_NO_CAP,
    BATTLE_OPTION_LEVEL_CAP,
    BATTLE_OPTION_LEVEL_COUNT,
};

enum optionBattleOpponentsItemsValues
{
    BATTLE_OPTION_OPPONENTS_ITEMS_ALLOWED,
    BATTLE_OPTION_OPPONENTS_ITEMS_DISABLED,
    BATTLE_OPTION_OPPONENTS_ITEMS_COUNT,
};

enum optionBattleCenterHealingValues
{
    BATTLE_OPTION_CENTER_HEALING_ALLOWED,
    BATTLE_OPTION_CENTER_HEALING_DISABLED,
    BATTLE_OPTION_CENTER_HEALING_COUNT,
};

#define BATTLE_OPTION_TAKE_WILD_ITEMS_NEVER       BATTLE_SCRIPT_OPTION_TAKE_WILD_ITEMS_NEVER
#define BATTLE_OPTION_TAKE_WILD_ITEMS_ASK         BATTLE_SCRIPT_OPTION_TAKE_WILD_ITEMS_ASK
#define BATTLE_OPTION_TAKE_WILD_ITEMS_ALWAYS      BATTLE_SCRIPT_OPTION_TAKE_WILD_ITEMS_ALWAYS
#define BATTLE_OPTION_TAKE_WILD_ITEMS_COUNT       BATTLE_SCRIPT_OPTION_TAKE_WILD_ITEMS_ALWAYS+1

enum optionBattleMoveHealingValues
{
    BATTLE_OPTION_MOVE_HEALING_ALLOWED,
    BATTLE_OPTION_MOVE_HEALING_DISABLED,
    BATTLE_OPTION_MOVE_HEALING_COUNT,
};

enum optionBattleFontSwitcherValues
{
    VISUAL_OPTION_FONT_SWITCHER_EMERALD,
    VISUAL_OPTION_FONT_SWITCHER_FIRERED,
    VISUAL_OPTION_FONT_SWITCHER_COUNT,
};

enum optionBattleFirstPokemonCatchValues
{
    BATTLE_OPTION_FIRST_POKEMON_CATCH_DEFAULT,
    BATTLE_OPTION_FIRST_POKEMON_CATCH_FIRST_ONLY,
    BATTLE_OPTION_FIRST_POKEMON_CATCH_DUPLICATE,
    BATTLE_OPTION_FIRST_POKEMON_CATCH_COUNT,
};

enum optionBattleItemHealingValues
{
    BATTLE_OPTION_ITEM_HEALING_ALLOWED,
    BATTLE_OPTION_ITEM_HEALING_DISABLED,
    BATTLE_OPTION_ITEM_HEALING_COUNT,
};

enum optionBattleTrainerScaling
{
    BATTLE_OPTION_TRAINER_SCALING_PARTY,
    BATTLE_OPTION_TRAINER_SCALING_LEVEL,
    BATTLE_OPTION_TRAINER_SCALING_OFF,
    BATTLE_OPTION_TRAINER_SCALING_COUNT,
};

enum optionBattleWildScaling
{
    BATTLE_OPTION_WILD_SCALING_ON,
    BATTLE_OPTION_WILD_SCALING_OFF,
    BATTLE_OPTION_WILD_SCALING_COUNT,
};

enum optionBattleIntro
{
    BATTLE_OPTION_INTRO_PLAY,
    BATTLE_OPTION_INTRO_SKIP,
    BATTLE_OPTION_INTRO_COUNT,
};

enum GameOptionsID
{
    GAME_OPTIONS_PRESET,
    GAME_OPTIONS_SAVE_BOOT,
    GAME_OPTIONS_BUTTON_MODE,
    GAME_OPTIONS_SAVE_BEHAVIOR,
    GAME_OPTIONS_RUN,
    GAME_OPTIONS_PUZZLES,
    GAME_OPTIONS_ITEM_SORT,
    GAME_OPTIONS_CUTSCENE,
    GAME_OPTIONS_SKIP_GUIDES,
    NUM_OPTIONS_GAME_SETTINGS,
};

enum BattleOptionsID
{
    BATTLE_OPTIONS_PRESET,
    BATTLE_OPTIONS_EXPERIENCE,
	BATTLE_OPTIONS_POINTS_MESSAGES,
	BATTLE_OPTIONS_POINTS_SUMMARY,
    BATTLE_OPTIONS_EXP_MULTIPLIER,
    BATTLE_OPTIONS_PLAYER_LEVEL,
    BATTLE_OPTIONS_TRAINER_SCALING,
    BATTLE_OPTIONS_WILD_SCALING,
    BATTLE_OPTIONS_SWITCH_STYLE,
    BATTLE_OPTIONS_TAKE_WILD_ITEMS,
    BATTLE_OPTIONS_LAST_USED_BALL,
    BATTLE_OPTIONS_QUICK_RUN,
	BATTLE_OPTIONS_MID_BATTLE_EVOLUTION,
    BATTLE_OPTIONS_BATTLE_DIFFICULTY,
    BATTLE_OPTIONS_FAINTED_MON,
    BATTLE_OPTIONS_FIRST_POKEMON_CATCH,
    BATTLE_OPTIONS_NICKNAME,
    BATTLE_OPTIONS_WHITEOUT,
    BATTLE_OPTIONS_ITEM_HEALING,
    BATTLE_OPTIONS_CENTER_HEALING,
    BATTLE_OPTIONS_MOVE_HEALING,
    BATTLE_OPTIONS_BAG_ITEMS,
    BATTLE_OPTIONS_OPPONENTS_ITEMS,
//    BATTLE_OPTIONS_BASE_STAT_EQUALIZER,
 //   BATTLE_OPTIONS_ONE_TYPE_CHALLENGE,
    BATTLE_OPTIONS_TYPE_ICONS,
    BATTLE_OPTIONS_ANIMATIONS,
    BATTLE_OPTIONS_INTRO,
    BATTLE_OPTIONS_HP_SPEED,
    BATTLE_OPTIONS_EXP_SPEED,
    BATTLE_OPTIONS_EFFORT_VALUES,
    BATTLE_OPTIONS_INDIVIDUAL_VALUES,
    NUM_OPTIONS_BATTLE_SETTINGS,
};

enum VisualOptionsID
{
    VISUAL_OPTIONS_PRESET,
    VISUAL_OPTIONS_UNITS,
    VISUAL_OPTIONS_TEXT_SPEED,
    VISUAL_OPTIONS_FONT_SWITCHER,
    VISUAL_OPTIONS_COLOR,
    VISUAL_OPTIONS_COLOR_VARIATION,
    NUM_OPTIONS_VISUAL_SETTINGS,
};

enum MusicOptionsID
{
    MUSIC_OPTIONS_PRESET,
    MUSIC_OPTIONS_SPEAKER,
    MUSIC_OPTIONS_SURF,
    MUSIC_OPTIONS_BIKE,
    MUSIC_OPTIONS_WILD,
    MUSIC_OPTIONS_TRAINER,
    MUSIC_OPTIONS_GYM,
    MUSIC_OPTIONS_TOURNAMENT,
    MUSIC_OPTIONS_CHAMPION,
    MUSIC_OPTIONS_MUTE_MUSIC,
    MUSIC_OPTIONS_MUTE_SOUNDFX,
    MUSIC_OPTIONS_MUTE_CRIES,
    MUSIC_OPTIONS_MUTE_FANFARES,
    NUM_OPTIONS_MUSIC_SETTINGS,
};

#define MUSIC_OPTIONS_CHANGE_BGM_START MUSIC_OPTIONS_SURF
#define MUSIC_OPTIONS_CHANGE_BGM_END MUSIC_OPTIONS_CHAMPION

#define MUSIC_OPTIONS_MUTE_START MUSIC_OPTIONS_MUTE_MUSIC
#define MUSIC_OPTIONS_MUTE_END MUSIC_OPTIONS_MUTE_FANFARES


enum RandomOptionsID
{
    RANDOM_OPTIONS_PRESET,
    RANDOM_OPTIONS_STARTER,
    RANDOM_OPTIONS_WILD_BATTLE,
    RANDOM_OPTIONS_TRAINER_BATTLE,
    RANDOM_OPTIONS_EVOLUTION,
    RANDOM_OPTIONS_EVOLUTION_METHOD,
    RANDOM_OPTIONS_TYPE_EFFECTIVENESS,
    RANDOM_OPTIONS_BASE_STATS,
    RANDOM_OPTIONS_TYPES,
    RANDOM_OPTIONS_ABILITIES,
    RANDOM_OPTIONS_LEVEL_UP_MOVES,
    RANDOM_OPTIONS_TMS,
    RANDOM_OPTIONS_MOVE_TUTORS,
    RANDOM_OPTIONS_LEARNSETS,
    RANDOM_OPTIONS_ITEMS,
    RANDOM_OPTIONS_STATIC_ENCOUNTERS,
    RANDOM_OPTIONS_TRAINERS,
    NUM_OPTIONS_RANDOM_SETTINGS,
};

enum optionVisualColor
{
    VISUAL_OPTION_COLOR_RED,
    VISUAL_OPTION_COLOR_GREEN,
    VISUAL_OPTION_COLOR_BLUE,
    VISUAL_OPTION_COLOR_YELLOW,
    VISUAL_OPTION_COLOR_BLACK,
    VISUAL_OPTION_COLOR_WHITE,
    VISUAL_OPTION_COLOR_PLATINUM,
    VISUAL_OPTION_COLOR_SCARLET,
    VISUAL_OPTION_COLOR_VIOLET,
    VISUAL_OPTION_COLOR_CUSTOM,
    VISUAL_OPTION_COLOR_COUNT,
};

enum optionsMusicGame
{
    MUSIC_OPTIONS_DEFAULT,
    MUSIC_OPTIONS_LGPE,
    MUSIC_OPTIONS_HGSS,
    MUSIC_OPTIONS_ORAS,
    MUSIC_OPTIONS_BDSP,
    MUSIC_OPTIONS_BW2,
    MUSIC_OPTIONS_XY,
    MUSIC_OPTIONS_USUM,
    MUSIC_OPTIONS_SWSH,
    MUSIC_OPTIONS_SV,
    MUSIC_OPTIONS_COUNT,
};

enum optionsMusicMuted
{
    MUSIC_OPTIONS_UNMUTED,
    MUSIC_OPTIONS_MUTED,
    MUSIC_OPTIONS_MUTE_COUNT,
};

enum optionVisualUnits
{
    VISUAL_OPTION_UNITS_IMPERIAL_PERIOD,
    VISUAL_OPTION_UNITS_METRIC_PERIOD,
    VISUAL_OPTION_UNITS_IMPERIAL_COMMA,
    VISUAL_OPTION_UNITS_METRIC_COMMA,
    VISUAL_OPTION_UNITS_COUNT,
};

enum optionBattleLastUsedBall
{
    BATTLE_OPTION_BALL_ALWAYS,
    BATTLE_OPTION_BALL_BEST,
    BATTLE_OPTION_BALL_AFTER,
    BATTLE_OPTION_BALL_OFF,
    BATTLE_OPTION_BALL_COUNT,
};

enum optionBattleQuickRun
{
    BATTLE_OPTION_QUICK_RUN_B_AND_A,
    BATTLE_OPTION_QUICK_RUN_L,
    BATTLE_OPTION_QUICK_RUN_OFF,
    BATTLE_OPTION_QUICK_RUN_COUNT,
};

enum optionaBattleHPExpSpeed
{
    BATTLE_OPTION_BAR_SPEED_NORMAL,
    BATTLE_OPTION_BAR_SPEED_FAST,
    BATTLE_OPTION_BAR_SPEED_INSTANT,
    BATTLE_OPTION_BAR_SPEED_COUNT,
};

enum optionLRButtonMode
{
    GAME_OPTION_LR_MODE,
    GAME_OPTION_LA_MODE,
    GAME_OPTION_L_MODE_COUNT,
};

enum optionsGameGuideValues
{
    GAME_OPTION_GUIDE_SKIP_OFF,
    GAME_OPTION_GUIDE_SKIP_GENERAL,
    GAME_OPTION_GUIDE_SKIP_ALL,
    GAME_OPTION_GUIDE_SKIP_COUNT,
};

#define NUM_MAX_SETTINGS NUM_OPTIONS_BATTLE_SETTINGS
#define MENU_BACKGROUND_COUNT 3
#define OPTION_DESC_LINES_COUNT 4
#define OPTION_DESC_PIXEL_WIDTH (DISPLAY_WIDTH - (TILE_SIZE_1BPP / 2))

#define FONT_OPTION_DESC FONT_SMALL_NARROW

#endif // GUARD_UI_VISUAL_OPTION_H
