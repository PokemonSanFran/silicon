#ifndef GUARD_ITEM_H
#define GUARD_ITEM_H

#include "constants/item.h"
#include "constants/item_effects.h"
#include "constants/items.h"
#include "constants/moves.h"
#include "constants/tms_hms.h"
#include "constants/item_effects.h"
#include "constants/hold_effects.h"

/* Expands to:
 * enum
 * {
 *   ITEM_TM_FOCUS_PUNCH = ITEM_TM01,
 *   ...
 *   ITEM_HM_CUT = ITM_HM01,
 *   ...
 * }; */
#define ENUM_TM(n, id) CAT(ITEM_TM_, id) = CAT(ITEM_TM, n),
#define ENUM_HM(n, id) CAT(ITEM_HM_, id) = CAT(ITEM_HM, n),
#define TO_TMHM_NUMS(a, ...) (__VA_ARGS__)
enum TMHMItemId
{
    ITEM_TM_GLARE = ITEM_TM01,
    ITEM_TM_HARDEN = ITEM_TM02,
    ITEM_TM_DOUBLE_TEAM = ITEM_TM03,
    ITEM_TM_TAIL_WHIP = ITEM_TM04,
    ITEM_TM_LEER = ITEM_TM05,
    ITEM_TM_CONFIDE = ITEM_TM06,
    ITEM_TM_SMOKESCREEN = ITEM_TM07,
    ITEM_TM_WHIRLWIND = ITEM_TM08,
    ITEM_TM_ROAR = ITEM_TM09,
    ITEM_TM_RECOVER = ITEM_TM10,
    ITEM_TM_FOCUS_ENERGY = ITEM_TM11,
    ITEM_TM_SUPERSONIC = ITEM_TM12,
    ITEM_TM_TEETER_DANCE = ITEM_TM13,
    ITEM_TM_SWORDS_DANCE = ITEM_TM14,
    ITEM_TM_SCREECH = ITEM_TM15,
    ITEM_TM_SCARY_FACE = ITEM_TM16,
    ITEM_TM_SWEET_SCENT = ITEM_TM17,
    ITEM_TM_SUBSTITUTE = ITEM_TM18,
    ITEM_TM_MIMIC = ITEM_TM19,
    ITEM_TM_METRONOME = ITEM_TM20,
    ITEM_TM_SPLASH = ITEM_TM21,
    ITEM_TM_DISABLE = ITEM_TM22,
    ITEM_TM_ENCORE = ITEM_TM23,
    ITEM_TM_PAIN_SPLIT = ITEM_TM24,
    ITEM_TM_SLEEP_TALK = ITEM_TM25,
    ITEM_TM_HEAL_BELL = ITEM_TM26,
    ITEM_TM_MEAN_LOOK = ITEM_TM27,
    ITEM_TM_BLOCK = ITEM_TM28,
    ITEM_TM_PROTECT = ITEM_TM29,
    ITEM_TM_PERISH_SONG = ITEM_TM30,
    ITEM_TM_ENDURE = ITEM_TM31,
    ITEM_TM_SWAGGER = ITEM_TM32,
    ITEM_TM_ATTRACT = ITEM_TM33,
    ITEM_TM_SAFEGUARD = ITEM_TM34,
    ITEM_TM_BATON_PASS = ITEM_TM35,
    ITEM_TM_MORNING_SUN = ITEM_TM36,
    ITEM_TM_BELLY_DRUM = ITEM_TM37,
    ITEM_TM_PSYCH_UP = ITEM_TM38,
    ITEM_TM_DEFENSE_CURL = ITEM_TM39,
    ITEM_TM_STOCKPILE = ITEM_TM40,
    ITEM_TM_SWALLOW = ITEM_TM41,
    ITEM_TM_FOLLOW_ME = ITEM_TM42,
    ITEM_TM_HELPING_HAND = ITEM_TM43,
    ITEM_TM_WISH = ITEM_TM44,
    ITEM_TM_RECYCLE = ITEM_TM45,
    ITEM_TM_YAWN = ITEM_TM46,
    ITEM_TM_TICKLE = ITEM_TM47,
    ITEM_TM_SIMPLE_BEAM = ITEM_TM48,
    ITEM_TM_ENTRAINMENT = ITEM_TM49,
    ITEM_TM_WORK_UP = ITEM_TM50,
    ITEM_TM_REFLECT_TYPE = ITEM_TM51,
    ITEM_TM_GROWTH = ITEM_TM52,
    ITEM_TM_SHELL_SMASH = ITEM_TM53,
    ITEM_TM_TEARFUL_LOOK = ITEM_TM54,
    ITEM_TM_COPYCAT = ITEM_TM55,
    ITEM_TM_AFTER_YOU = ITEM_TM56,
    ITEM_TM_ACUPRESSURE = ITEM_TM57,
    ITEM_TM_STUFF_CHEEKS = ITEM_TM58,
    ITEM_TM_HOWL = ITEM_TM59,
    ITEM_TM_DETECT = ITEM_TM60,
    ITEM_TM_QUICK_GUARD = ITEM_TM61,
    ITEM_TM_BULK_UP = ITEM_TM62,
    ITEM_TM_COACHING = ITEM_TM63,
    ITEM_TM_FEATHER_DANCE = ITEM_TM64,
    ITEM_TM_ROOST = ITEM_TM65,
    ITEM_TM_TAILWIND = ITEM_TM66,
    ITEM_TM_DEFOG = ITEM_TM67,
    ITEM_TM_POISON_POWDER = ITEM_TM68,
    ITEM_TM_TOXIC = ITEM_TM69,
    ITEM_TM_ACID_ARMOR = ITEM_TM70,
    ITEM_TM_TOXIC_SPIKES = ITEM_TM71,
    ITEM_TM_GASTRO_ACID = ITEM_TM72,
    ITEM_TM_SAND_ATTACK = ITEM_TM73,
    ITEM_TM_SPIKES = ITEM_TM74,
    ITEM_TM_ROCK_POLISH = ITEM_TM75,
    ITEM_TM_WIDE_GUARD = ITEM_TM76,
    ITEM_TM_SANDSTORM = ITEM_TM77,
    ITEM_TM_STEALTH_ROCK = ITEM_TM78,
    ITEM_TM_STICKY_WEB = ITEM_TM79,
    ITEM_TM_QUIVER_DANCE = ITEM_TM80,
    ITEM_TM_CONFUSE_RAY = ITEM_TM81,
    ITEM_TM_DESTINY_BOND = ITEM_TM82,
    ITEM_TM_SPITE = ITEM_TM83,
    ITEM_TM_CURSE = ITEM_TM84,
    ITEM_TM_IRON_DEFENSE = ITEM_TM85,
    ITEM_TM_METAL_SOUND = ITEM_TM86,
    ITEM_TM_WILL_O_WISP = ITEM_TM87,
    ITEM_TM_SUNNY_DAY = ITEM_TM88,
    ITEM_TM_RAIN_DANCE = ITEM_TM89,
    ITEM_TM_AQUA_RING = ITEM_TM90,
    ITEM_TM_SOAK = ITEM_TM91,
    ITEM_TM_LIFE_DEW = ITEM_TM92,
    ITEM_TM_STUN_SPORE = ITEM_TM93,
    ITEM_TM_LEECH_SEED = ITEM_TM94,
    ITEM_TM_SYNTHESIS = ITEM_TM95,
    ITEM_TM_WORRY_SEED = ITEM_TM96,
    ITEM_TM_INGRAIN = ITEM_TM97,
    ITEM_TM_GRASSY_TERRAIN = ITEM_TM98,
    ITEM_TM_COTTON_GUARD = ITEM_TM99,
    ITEM_TM_STRENGTH_SAP = ITEM_TM100,
    ITEM_TM_THUNDER_WAVE = ITEM_TM101,
    ITEM_TM_EERIE_IMPULSE = ITEM_TM102,
    ITEM_TM_CHARGE = ITEM_TM103,
    ITEM_TM_MAGNET_RISE = ITEM_TM104,
    ITEM_TM_ELECTRIC_TERRAIN = ITEM_TM105,
    ITEM_TM_HYPNOSIS = ITEM_TM106,
    ITEM_TM_LIGHT_SCREEN = ITEM_TM107,
    ITEM_TM_REST = ITEM_TM108,
    ITEM_TM_AGILITY = ITEM_TM109,
    ITEM_TM_AMNESIA = ITEM_TM110,
    ITEM_TM_REFLECT = ITEM_TM111,
    ITEM_TM_HEALING_WISH = ITEM_TM112,
    ITEM_TM_TRICK = ITEM_TM113,
    ITEM_TM_ROLE_PLAY = ITEM_TM114,
    ITEM_TM_SKILL_SWAP = ITEM_TM115,
    ITEM_TM_IMPRISON = ITEM_TM116,
    ITEM_TM_COSMIC_POWER = ITEM_TM117,
    ITEM_TM_CALM_MIND = ITEM_TM118,
    ITEM_TM_GRAVITY = ITEM_TM119,
    ITEM_TM_TRICK_ROOM = ITEM_TM120,
    ITEM_TM_WONDER_ROOM = ITEM_TM121,
    ITEM_TM_MAGIC_ROOM = ITEM_TM122,
    ITEM_TM_POWER_SWAP = ITEM_TM123,
    ITEM_TM_GUARD_SWAP = ITEM_TM124,
    ITEM_TM_POWER_SPLIT = ITEM_TM125,
    ITEM_TM_GUARD_SPLIT = ITEM_TM126,
    ITEM_TM_HEAL_PULSE = ITEM_TM127,
    ITEM_TM_PSYCHIC_TERRAIN = ITEM_TM128,
    ITEM_TM_SPEED_SWAP = ITEM_TM129,
    ITEM_TM_ALLY_SWITCH = ITEM_TM130,
    ITEM_TM_HAZE = ITEM_TM131,
    ITEM_TM_MIST = ITEM_TM132,
    ITEM_TM_AURORA_VEIL = ITEM_TM133,
    ITEM_TM_SNOWSCAPE = ITEM_TM134,
    ITEM_TM_DRAGON_DANCE = ITEM_TM135,
    ITEM_TM_DRAGON_CHEER = ITEM_TM136,
    ITEM_TM_NASTY_PLOT = ITEM_TM137,
    ITEM_TM_FAKE_TEARS = ITEM_TM138,
    ITEM_TM_TORMENT = ITEM_TM139,
    ITEM_TM_FLATTER = ITEM_TM140,
    ITEM_TM_MEMENTO = ITEM_TM141,
    ITEM_TM_TAUNT = ITEM_TM142,
    ITEM_TM_SWITCHEROO = ITEM_TM143,
    ITEM_TM_QUASH = ITEM_TM144,
    ITEM_TM_PARTING_SHOT = ITEM_TM145,
    ITEM_TM_BABY_DOLL_EYES = ITEM_TM146,
    ITEM_TM_SWEET_KISS = ITEM_TM147,
    ITEM_TM_CHARM = ITEM_TM148,
    ITEM_TM_MISTY_TERRAIN = ITEM_TM149,
    ITEM_TM_AROMATIC_MIST = ITEM_TM150,
    ITEM_TM_HORN_DRILL = ITEM_TM151,
    ITEM_TM_SUPER_FANG = ITEM_TM152,
    ITEM_TM_FLAIL = ITEM_TM153,
    ITEM_TM_PRESENT = ITEM_TM154,
    ITEM_TM_ENDEAVOR = ITEM_TM155,
    ITEM_TM_SPIT_UP = ITEM_TM156,
    ITEM_TM_SEISMIC_TOSS = ITEM_TM157,
    ITEM_TM_COUNTER = ITEM_TM158,
    ITEM_TM_REVERSAL = ITEM_TM159,
    ITEM_TM_LOW_KICK = ITEM_TM160,
    ITEM_TM_FINAL_GAMBIT = ITEM_TM161,
    ITEM_TM_FISSURE = ITEM_TM162,
    ITEM_TM_NIGHT_SHADE = ITEM_TM163,
    ITEM_TM_HEAVY_SLAM = ITEM_TM164,
    ITEM_TM_GYRO_BALL = ITEM_TM165,
    ITEM_TM_HEAT_CRASH = ITEM_TM166,
    ITEM_TM_GRASS_KNOT = ITEM_TM167,
    ITEM_TM_ELECTRO_BALL = ITEM_TM168,
    ITEM_TM_MIRROR_COAT = ITEM_TM169,
    ITEM_TM_BEAT_UP = ITEM_TM170,
    ITEM_TM_FLING = ITEM_TM171,
    ITEM_TM_BIND = ITEM_TM172,
    ITEM_TM_MUD_SLAP = ITEM_TM173,
    ITEM_TM_INFESTATION = ITEM_TM174,
    ITEM_TM_ABSORB = ITEM_TM175,
    ITEM_TM_NUZZLE = ITEM_TM176,
    ITEM_TM_STORED_POWER = ITEM_TM177,
    ITEM_TM_TRIPLE_AXEL = ITEM_TM178,
    ITEM_TM_POWER_TRIP = ITEM_TM179,
    ITEM_TM_TAIL_SLAP = ITEM_TM180,
    ITEM_TM_ROCK_BLAST = ITEM_TM181,
    ITEM_TM_PIN_MISSILE = ITEM_TM182,
    ITEM_TM_BULLET_SEED = ITEM_TM183,
    ITEM_TM_ICICLE_SPEAR = ITEM_TM184,
    ITEM_TM_SCALE_SHOT = ITEM_TM185,
    ITEM_TM_FEINT = ITEM_TM186,
    ITEM_TM_DOUBLE_KICK = ITEM_TM187,
    ITEM_TM_SMOG = ITEM_TM188,
    ITEM_TM_ROLLOUT = ITEM_TM189,
    ITEM_TM_LICK = ITEM_TM190,
    ITEM_TM_ASTONISH = ITEM_TM191,
    ITEM_TM_DOUBLE_HIT = ITEM_TM192,
    ITEM_TM_PECK = ITEM_TM193,
    ITEM_TM_SAND_TOMB = ITEM_TM194,
    ITEM_TM_FIRE_SPIN = ITEM_TM195,
    ITEM_TM_WHIRLPOOL = ITEM_TM196,
    ITEM_TM_PAY_DAY = ITEM_TM197,
    ITEM_TM_QUICK_ATTACK = ITEM_TM198,
    ITEM_TM_FALSE_SWIPE = ITEM_TM199,
    ITEM_TM_FAKE_OUT = ITEM_TM200,
    ITEM_TM_ECHOED_VOICE = ITEM_TM201,
    ITEM_TM_MACH_PUNCH = ITEM_TM202,
    ITEM_TM_ROCK_SMASH = ITEM_TM203,
    ITEM_TM_POWER_UP_PUNCH = ITEM_TM204,
    ITEM_TM_VACUUM_WAVE = ITEM_TM205,
    ITEM_TM_DUAL_WINGBEAT = ITEM_TM206,
    ITEM_TM_GUST = ITEM_TM207,
    ITEM_TM_ACID = ITEM_TM208,
    ITEM_TM_ACID_SPRAY = ITEM_TM209,
    ITEM_TM_FURY_CUTTER = ITEM_TM210,
    ITEM_TM_SHADOW_SNEAK = ITEM_TM211,
    ITEM_TM_BULLET_PUNCH = ITEM_TM212,
    ITEM_TM_AQUA_JET = ITEM_TM213,
    ITEM_TM_MEGA_DRAIN = ITEM_TM214,
    ITEM_TM_ICE_SHARD = ITEM_TM215,
    ITEM_TM_TWISTER = ITEM_TM216,
    ITEM_TM_DISARMING_VOICE = ITEM_TM217,
    ITEM_TM_RAPID_SPIN = ITEM_TM218,
    ITEM_TM_SNORE = ITEM_TM219,
    ITEM_TM_WEATHER_BALL = ITEM_TM220,
    ITEM_TM_POISON_FANG = ITEM_TM221,
    ITEM_TM_POISON_TAIL = ITEM_TM222,
    ITEM_TM_CLEAR_SMOG = ITEM_TM223,
    ITEM_TM_ROCK_THROW = ITEM_TM224,
    ITEM_TM_SMACK_DOWN = ITEM_TM225,
    ITEM_TM_POUNCE = ITEM_TM226,
    ITEM_TM_FELL_STINGER = ITEM_TM227,
    ITEM_TM_STRUGGLE_BUG = ITEM_TM228,
    ITEM_TM_METAL_CLAW = ITEM_TM229,
    ITEM_TM_FLAME_CHARGE = ITEM_TM230,
    ITEM_TM_CHILLING_WATER = ITEM_TM231,
    ITEM_TM_TRAILBLAZE = ITEM_TM232,
    ITEM_TM_CHARGE_BEAM = ITEM_TM233,
    ITEM_TM_CONFUSION = ITEM_TM234,
    ITEM_TM_PAYBACK = ITEM_TM235,
    ITEM_TM_DRAINING_KISS = ITEM_TM236,
    ITEM_TM_ACROBATICS = ITEM_TM237,
    ITEM_TM_MUD_SHOT = ITEM_TM238,
    ITEM_TM_GRASSY_GLIDE = ITEM_TM239,
    ITEM_TM_ELECTROWEB = ITEM_TM240,
    ITEM_TM_ICY_WIND = ITEM_TM241,
    ITEM_TM_SNARL = ITEM_TM242,
    ITEM_TM_COVET = ITEM_TM243,
    ITEM_TM_SWIFT = ITEM_TM244,
    ITEM_TM_ROUND = ITEM_TM245,
    ITEM_TM_CIRCLE_THROW = ITEM_TM246,
    ITEM_TM_WING_ATTACK = ITEM_TM247,
    ITEM_TM_AERIAL_ACE = ITEM_TM248,
    ITEM_TM_PLUCK = ITEM_TM249,
    ITEM_TM_AIR_CUTTER = ITEM_TM250,
    ITEM_TM_BULLDOZE = ITEM_TM251,
    ITEM_TM_ROCK_TOMB = ITEM_TM252,
    ITEM_TM_ANCIENT_POWER = ITEM_TM253,
    ITEM_TM_BUG_BITE = ITEM_TM254,
    ITEM_TM_FLIP_TURN = ITEM_TM255,
    ITEM_TM_WATER_PULSE = ITEM_TM256,
    ITEM_TM_MAGICAL_LEAF = ITEM_TM257,
    ITEM_TM_SHOCK_WAVE = ITEM_TM258,
    ITEM_TM_AVALANCHE = ITEM_TM259,
    ITEM_TM_BREAKING_SWIPE = ITEM_TM260,
    ITEM_TM_DRAGON_TAIL = ITEM_TM261,
    ITEM_TM_DRAGON_BREATH = ITEM_TM262,
    ITEM_TM_BITE = ITEM_TM263,
    ITEM_TM_THIEF = ITEM_TM264,
    ITEM_TM_FAINT_ATTACK = ITEM_TM265,
    ITEM_TM_BRUTAL_SWING = ITEM_TM266,
    ITEM_TM_ASSURANCE = ITEM_TM267,
    ITEM_TM_STOMP = ITEM_TM268,
    ITEM_TM_LOW_SWEEP = ITEM_TM269,
    ITEM_TM_UPPER_HAND = ITEM_TM270,
    ITEM_TM_SLUDGE = ITEM_TM271,
    ITEM_TM_VENOSHOCK = ITEM_TM272,
    ITEM_TM_HEX = ITEM_TM273,
    ITEM_TM_FIRE_FANG = ITEM_TM274,
    ITEM_TM_OCTAZOOKA = ITEM_TM275,
    ITEM_TM_BRINE = ITEM_TM276,
    ITEM_TM_THUNDER_FANG = ITEM_TM277,
    ITEM_TM_PSYBEAM = ITEM_TM278,
    ITEM_TM_ICE_FANG = ITEM_TM279,
    ITEM_TM_AURORA_BEAM = ITEM_TM280,
    ITEM_TM_KNOCK_OFF = ITEM_TM281,
    ITEM_TM_HEADBUTT = ITEM_TM282,
    ITEM_TM_SLASH = ITEM_TM283,
    ITEM_TM_FACADE = ITEM_TM284,
    ITEM_TM_RETALIATE = ITEM_TM285,
    ITEM_TM_WAKE_UP_SLAP = ITEM_TM286,
    ITEM_TM_CROSS_POISON = ITEM_TM287,
    ITEM_TM_SCORCHING_SANDS = ITEM_TM288,
    ITEM_TM_SKITTER_SMACK = ITEM_TM289,
    ITEM_TM_U_TURN = ITEM_TM290,
    ITEM_TM_SHADOW_CLAW = ITEM_TM291,
    ITEM_TM_STEEL_WING = ITEM_TM292,
    ITEM_TM_SMART_STRIKE = ITEM_TM293,
    ITEM_TM_BURNING_JEALOUSY = ITEM_TM294,
    ITEM_TM_AQUA_CUTTER = ITEM_TM295,
    ITEM_TM_VOLT_SWITCH = ITEM_TM296,
    ITEM_TM_PSYCHO_CUT = ITEM_TM297,
    ITEM_TM_PSYSHIELD_BASH = ITEM_TM298,
    ITEM_TM_FREEZE_DRY = ITEM_TM299,
    ITEM_TM_NIGHT_SLASH = ITEM_TM300,
    ITEM_TM_SUCKER_PUNCH = ITEM_TM301,
    ITEM_TM_DRAIN_PUNCH = ITEM_TM302,
    ITEM_TM_BRICK_BREAK = ITEM_TM303,
    ITEM_TM_AIR_SLASH = ITEM_TM304,
    ITEM_TM_STOMPING_TANTRUM = ITEM_TM305,
    ITEM_TM_ROCK_SLIDE = ITEM_TM306,
    ITEM_TM_FIRE_PUNCH = ITEM_TM307,
    ITEM_TM_TEMPER_FLARE = ITEM_TM308,
    ITEM_TM_MYSTICAL_FIRE = ITEM_TM309,
    ITEM_TM_RAZOR_SHELL = ITEM_TM310,
    ITEM_TM_GIGA_DRAIN = ITEM_TM311,
    ITEM_TM_THUNDER_PUNCH = ITEM_TM312,
    ITEM_TM_PSYCHIC_NOISE = ITEM_TM313,
    ITEM_TM_ICE_PUNCH = ITEM_TM314,
    ITEM_TM_LASH_OUT = ITEM_TM315,
    ITEM_TM_MEGA_PUNCH = ITEM_TM316,
    ITEM_TM_SLAM = ITEM_TM317,
    ITEM_TM_EXTREME_SPEED = ITEM_TM318,
    ITEM_TM_TRI_ATTACK = ITEM_TM319,
    ITEM_TM_BODY_PRESS = ITEM_TM320,
    ITEM_TM_AURA_SPHERE = ITEM_TM321,
    ITEM_TM_DRILL_PECK = ITEM_TM322,
    ITEM_TM_POISON_JAB = ITEM_TM323,
    ITEM_TM_DRILL_RUN = ITEM_TM324,
    ITEM_TM_DIG = ITEM_TM325,
    ITEM_TM_POWER_GEM = ITEM_TM326,
    ITEM_TM_X_SCISSOR = ITEM_TM327,
    ITEM_TM_LUNGE = ITEM_TM328,
    ITEM_TM_LEECH_LIFE = ITEM_TM329,
    ITEM_TM_SHADOW_BALL = ITEM_TM330,
    ITEM_TM_IRON_HEAD = ITEM_TM331,
    ITEM_TM_WATERFALL = ITEM_TM332,
    ITEM_TM_DIVE = ITEM_TM333,
    ITEM_TM_SCALD = ITEM_TM334,
    ITEM_TM_WATER_PLEDGE = ITEM_TM335,
    ITEM_TM_SEED_BOMB = ITEM_TM336,
    ITEM_TM_GRASS_PLEDGE = ITEM_TM337,
    ITEM_TM_DISCHARGE = ITEM_TM338,
    ITEM_TM_ZEN_HEADBUTT = ITEM_TM339,
    ITEM_TM_EXTRASENSORY = ITEM_TM340,
    ITEM_TM_PSYSHOCK = ITEM_TM341,
    ITEM_TM_EXPANDING_FORCE = ITEM_TM342,
    ITEM_TM_ICE_SPINNER = ITEM_TM343,
    ITEM_TM_DRAGON_CLAW = ITEM_TM344,
    ITEM_TM_CRUNCH = ITEM_TM345,
    ITEM_TM_THROAT_CHOP = ITEM_TM346,
    ITEM_TM_DARK_PULSE = ITEM_TM347,
    ITEM_TM_DAZZLING_GLEAM = ITEM_TM348,
    ITEM_TM_ALLURING_VOICE = ITEM_TM349,
    ITEM_TM_BODY_SLAM = ITEM_TM350,
    ITEM_TM_BOUNCE = ITEM_TM351,
    ITEM_TM_LIQUIDATION = ITEM_TM352,
    ITEM_TM_PSYCHIC_FANGS = ITEM_TM353,
    ITEM_TM_ICICLE_CRASH = ITEM_TM354,
    ITEM_TM_DRAGON_PULSE = ITEM_TM355,
    ITEM_TM_DARKEST_LARIAT = ITEM_TM356,
    ITEM_TM_TAKE_DOWN = ITEM_TM357,
    ITEM_TM_HYPER_VOICE = ITEM_TM358,
    ITEM_TM_UPROAR = ITEM_TM359,
    ITEM_TM_FLY = ITEM_TM360,
    ITEM_TM_SLUDGE_BOMB = ITEM_TM361,
    ITEM_TM_EARTH_POWER = ITEM_TM362,
    ITEM_TM_FIRST_IMPRESSION = ITEM_TM363,
    ITEM_TM_BUG_BUZZ = ITEM_TM364,
    ITEM_TM_POLLEN_PUFF = ITEM_TM365,
    ITEM_TM_PHANTOM_FORCE = ITEM_TM366,
    ITEM_TM_FLAMETHROWER = ITEM_TM367,
    ITEM_TM_AQUA_TAIL = ITEM_TM368,
    ITEM_TM_SURF = ITEM_TM369,
    ITEM_TM_MUDDY_WATER = ITEM_TM370,
    ITEM_TM_SPARKLING_ARIA = ITEM_TM371,
    ITEM_TM_LEAF_BLADE = ITEM_TM372,
    ITEM_TM_PETAL_BLIZZARD = ITEM_TM373,
    ITEM_TM_ENERGY_BALL = ITEM_TM374,
    ITEM_TM_WILD_CHARGE = ITEM_TM375,
    ITEM_TM_THUNDERBOLT = ITEM_TM376,
    ITEM_TM_PSYCHIC = ITEM_TM377,
    ITEM_TM_ICE_BEAM = ITEM_TM378,
    ITEM_TM_PLAY_ROUGH = ITEM_TM379,
    ITEM_TM_SLUDGE_WAVE = ITEM_TM380,
    ITEM_TM_HIGH_HORSEPOWER = ITEM_TM381,
    ITEM_TM_HEAT_WAVE = ITEM_TM382,
    ITEM_TM_FOUL_PLAY = ITEM_TM383,
    ITEM_TM_MOONBLAST = ITEM_TM384,
    ITEM_TM_DYNAMIC_PUNCH = ITEM_TM385,
    ITEM_TM_CROSS_CHOP = ITEM_TM386,
    ITEM_TM_HAMMER_ARM = ITEM_TM387,
    ITEM_TM_EARTHQUAKE = ITEM_TM388,
    ITEM_TM_STONE_EDGE = ITEM_TM389,
    ITEM_TM_IRON_TAIL = ITEM_TM390,
    ITEM_TM_HARD_PRESS = ITEM_TM391,
    ITEM_TM_CRABHAMMER = ITEM_TM392,
    ITEM_TM_SUPERCELL_SLAM = ITEM_TM393,
    ITEM_TM_DREAM_EATER = ITEM_TM394,
    ITEM_TM_DRAGON_RUSH = ITEM_TM395,
    ITEM_TM_MISTY_EXPLOSION = ITEM_TM396,
    ITEM_TM_HURRICANE = ITEM_TM397,
    ITEM_TM_POLTERGEIST = ITEM_TM398,
    ITEM_TM_FIRE_BLAST = ITEM_TM399,
    ITEM_TM_HYDRO_PUMP = ITEM_TM400,
    ITEM_TM_THUNDER = ITEM_TM401,
    ITEM_TM_BLIZZARD = ITEM_TM402,
    ITEM_TM_MEGA_KICK = ITEM_TM403,
    ITEM_TM_THRASH = ITEM_TM404,
    ITEM_TM_DOUBLE_EDGE = ITEM_TM405,
    ITEM_TM_SUPERPOWER = ITEM_TM406,
    ITEM_TM_CLOSE_COMBAT = ITEM_TM407,
    ITEM_TM_FOCUS_BLAST = ITEM_TM408,
    ITEM_TM_BRAVE_BIRD = ITEM_TM409,
    ITEM_TM_GUNK_SHOT = ITEM_TM410,
    ITEM_TM_BELCH = ITEM_TM411,
    ITEM_TM_METEOR_BEAM = ITEM_TM412,
    ITEM_TM_MEGAHORN = ITEM_TM413,
    ITEM_TM_FLARE_BLITZ = ITEM_TM414,
    ITEM_TM_POWER_WHIP = ITEM_TM415,
    ITEM_TM_SOLAR_BEAM = ITEM_TM416,
    ITEM_TM_FUTURE_SIGHT = ITEM_TM417,
    ITEM_TM_OUTRAGE = ITEM_TM418,
    ITEM_TM_SOLAR_BLADE = ITEM_TM419,
    ITEM_TM_HIGH_JUMP_KICK = ITEM_TM420,
    ITEM_TM_OVERHEAT = ITEM_TM421,
    ITEM_TM_LEAF_STORM = ITEM_TM422,
    ITEM_TM_DRACO_METEOR = ITEM_TM423,
    ITEM_TM_LAST_RESORT = ITEM_TM424,
    ITEM_TM_BOOMBURST = ITEM_TM425,
    ITEM_TM_SKY_ATTACK = ITEM_TM426,
    ITEM_TM_STEEL_BEAM = ITEM_TM427,
    ITEM_TM_GIGA_IMPACT = ITEM_TM428,
    ITEM_TM_HYPER_BEAM = ITEM_TM429,
    ITEM_TM_FOCUS_PUNCH = ITEM_TM430,
    ITEM_TM_HEAD_SMASH = ITEM_TM431,
    ITEM_TM_HYDRO_CANNON = ITEM_TM432,
    ITEM_TM_WATER_SPOUT = ITEM_TM433,
    ITEM_TM_FRENZY_PLANT = ITEM_TM434,
    ITEM_TM_SELF_DESTRUCT = ITEM_TM435,
    ITEM_TM_EXPLOSION = ITEM_TM436,
    /*
    RECURSIVELY(R_ZIP(ENUM_TM, TO_TMHM_NUMS NUMBERS_256, (FOREACH_TM(APPEND_COMMA))))
    */
    RECURSIVELY(R_ZIP(ENUM_HM, TO_TMHM_NUMS NUMBERS_256, (FOREACH_HM(APPEND_COMMA))))
};

#undef ENUM_TM
#undef ENUM_HM
#undef TO_TMHM_NUMS

/* Each of these TM_HM enums corresponds an index in the list of TMs + HMs item ids in
 * gTMHMItemMoveIds. The index for an item can be retrieved with GetItemTMHMIndex below.
 */
#define UNPACK_TM_HM_ENUM(_tmHm) CAT(ENUM_TM_HM_, _tmHm),
enum TMHMIndex
{
    FOREACH_TMHM(UNPACK_TM_HM_ENUM)
    NUM_ALL_MACHINES,
    NUM_TECHNICAL_MACHINES = (0 FOREACH_TM(PLUS_ONE)),
    NUM_HIDDEN_MACHINES = (0 FOREACH_HM(PLUS_ONE)),
};

#undef UNPACK_TM_HM_ENUM

enum PACKED ItemSortType
{
    ITEM_TYPE_UNCATEGORIZED,
    ITEM_TYPE_FIELD_USE,
    ITEM_TYPE_LEVEL_UP_ITEM,
    ITEM_TYPE_HEALTH_RECOVERY,
    ITEM_TYPE_STATUS_RECOVERY,
    ITEM_TYPE_PP_RECOVERY,
    ITEM_TYPE_NATURE_MINT,
    ITEM_TYPE_STAT_BOOST_DRINK,
    ITEM_TYPE_STAT_BOOST_FEATHER,
    ITEM_TYPE_STAT_BOOST_MOCHI,
    ITEM_TYPE_BATTLE_ITEM,
    ITEM_TYPE_FLUTE,
    ITEM_TYPE_X_ITEM,
    ITEM_TYPE_AUX_ITEM,
    ITEM_TYPE_EVOLUTION_STONE,
    ITEM_TYPE_EVOLUTION_ITEM,
    ITEM_TYPE_SPECIAL_HELD_ITEM,
    ITEM_TYPE_MEGA_STONE,
    ITEM_TYPE_Z_CRYSTAL,
    ITEM_TYPE_TERA_SHARD,
    ITEM_TYPE_HELD_ITEM,
    ITEM_TYPE_TYPE_BOOST_HELD_ITEM,
    ITEM_TYPE_CONTEST_HELD_ITEM,
    ITEM_TYPE_EV_BOOST_HELD_ITEM,
    ITEM_TYPE_GEM,
    ITEM_TYPE_PLATE,
    ITEM_TYPE_MEMORY,
    ITEM_TYPE_DRIVE,
    ITEM_TYPE_INCENSE,
    ITEM_TYPE_NECTAR,
    ITEM_TYPE_GROWTH,
    ITEM_TYPE_SHARD,
    ITEM_TYPE_SELLABLE,
    ITEM_TYPE_RELIC,
    ITEM_TYPE_FOSSIL,
    ITEM_TYPE_MAIL,
};

typedef void (*ItemUseFunc)(u8);

struct Item
{
    u32 price;
    u16 secondaryId;
    ItemUseFunc fieldUseFunc;
    const u8 *description;
    const u8 *effect;
    const u8 *name;
    const u8 *pluralName;
    u8 holdEffect;
    u8 holdEffectParam;
    u8 importance:2;
    u8 notConsumed:1;
    enum Pocket pocket:5;
    enum ItemSortType sortType;
    u8 type;
    u8 battleUsage;
    u8 flingPower;
    u8 nativeItemGroup; // silconMerge
    const u32 *iconPic;
    const u16 *iconPalette;
};

struct ALIGNED(2) BagPocket
{
    struct ItemSlot *itemSlots;
    u16 capacity:10;
    enum Pocket id:6;
};

struct TmHmIndexKey
{
    enum TMHMItemId itemId:16;
    u16 moveId;
};

extern const u8 gQuestionMarksItemName[];
extern const struct Item gItemsInfo[];
extern struct BagPocket gBagPockets[];
extern struct ItemSlot gTmHmItemSlots[NUM_TECHNICAL_MACHINES];// PSF technicalmachine Branch
extern const struct TmHmIndexKey gTMHMItemMoveIds[];

#define UNPACK_ITEM_TO_TM_INDEX(_tm) case CAT(ITEM_TM_, _tm): return CAT(ENUM_TM_HM_, _tm) + 1;
#define UNPACK_ITEM_TO_HM_INDEX(_hm) case CAT(ITEM_HM_, _hm): return CAT(ENUM_TM_HM_, _hm) + 1;
#define UNPACK_ITEM_TO_TM_MOVE_ID(_tm) case CAT(ITEM_TM_, _tm): return CAT(MOVE_, _tm);
#define UNPACK_ITEM_TO_HM_MOVE_ID(_hm) case CAT(ITEM_HM_, _hm): return CAT(MOVE_, _hm);

static inline enum TMHMIndex GetItemTMHMIndex(u16 item)
{
    switch (item)
    {
        /* Expands to:
         * case ITEM_TM_FOCUS_PUNCH:
         *     return 1;
         * case ITEM_TM_DRAGON_CLAW:
         *      return 2;
         * etc */
        FOREACH_TM(UNPACK_ITEM_TO_TM_INDEX)
        FOREACH_HM(UNPACK_ITEM_TO_HM_INDEX)
        default:
            return 0;
    }
}

static inline u16 GetItemTMHMMoveId(u16 item)
{
    switch (item)
    {
        /* Expands to:
         * case ITEM_TM_FOCUS_PUNCH:
         *     return MOVE_FOCUS_PUNCH;
         * case ITEM_TM_DRAGON_CLAW:
         *      return MOVE_DRAGON_CLAW;
         * etc */
        FOREACH_TM(UNPACK_ITEM_TO_TM_MOVE_ID)
        FOREACH_HM(UNPACK_ITEM_TO_HM_MOVE_ID)
        default:
            return MOVE_NONE;
    }
}

#undef UNPACK_ITEM_TO_TM_INDEX
#undef UNPACK_ITEM_TO_HM_INDEX
#undef UNPACK_ITEM_TO_TM_MOVE_ID
#undef UNPACK_ITEM_TO_HM_MOVE_ID

static inline enum TMHMItemId GetTMHMItemId(enum TMHMIndex index)
{
    return gTMHMItemMoveIds[index].itemId;
}

static inline u16 GetTMHMMoveId(enum TMHMIndex index)
{
    return gTMHMItemMoveIds[index].moveId;
}

void BagPocket_SetSlotData(struct BagPocket *pocket, u32 pocketPos, struct ItemSlot newSlot);
struct ItemSlot BagPocket_GetSlotData(struct BagPocket *pocket, u32 pocketPos);

static inline void BagPocket_SetSlotItemIdAndCount(struct BagPocket *pocket, u32 pocketPos, u16 itemId, u16 quantity)
{
    BagPocket_SetSlotData(pocket, pocketPos, (struct ItemSlot) {itemId, quantity});
}

static inline u16 GetBagItemId(enum Pocket pocketId, u32 pocketPos)
{
    return BagPocket_GetSlotData(&gBagPockets[pocketId], pocketPos).itemId;
}

static inline u16 GetBagItemQuantity(enum Pocket pocketId, u32 pocketPos)
{
    return BagPocket_GetSlotData(&gBagPockets[pocketId], pocketPos).quantity;
}

static inline struct ItemSlot GetBagItemIdAndQuantity(enum Pocket pocketId, u32 pocketPos)
{
    return BagPocket_GetSlotData(&gBagPockets[pocketId], pocketPos);
}

void ApplyNewEncryptionKeyToBagItems(u32 newKey);
void SetBagItemsPointers(void);
u8 *CopyItemName(u16 itemId, u8 *dst);
u8 *CopyItemNameHandlePlural(u16 itemId, u8 *dst, u32 quantity);
bool32 IsBagPocketNonEmpty(enum Pocket pocketId);
bool32 CheckBagHasItem(u16 itemId, u16 count);
bool32 HasAtLeastOneBerry(void);
bool32 HasAtLeastOnePokeBall(void);
bool32 CheckBagHasSpace(u16 itemId, u16 count);
u32 GetFreeSpaceForItemInBag(u16 itemId);
bool32 AddBagItem(u16 itemId, u16 count);
bool32 RemoveBagItem(u16 itemId, u16 count);
void ClearItemSlots(struct ItemSlot *itemSlots, u16 itemCount); // silconMerge
u8 CountUsedPCItemSlots(void);
bool32 CheckPCHasItem(u16 itemId, u16 count);
bool32 AddPCItem(u16 itemId, u16 count);
void RemovePCItem(u8 index, u16 count);
void CompactPCItems(void);
void SwapRegisteredBike(void);
void CompactItemsInBagPocket(enum Pocket pocketId);
void MoveItemSlotInPocket(enum Pocket pocketId, u32 from, u32 to);
void MoveItemSlotInPC(struct ItemSlot *itemSlots, u32 from, u32 to);
void ClearBag(void);
u16 CountTotalItemQuantityInBag(u16 itemId);
bool32 AddPyramidBagItem(u16 itemId, u16 count);
bool32 RemovePyramidBagItem(u16 itemId, u16 count);
u32 GetItemNativeGroup(u32 itemId); // siliconMerge
const u8 *GetItemName(u16 itemId);
u32 GetItemPrice(u16 itemId);
const u8 *GetItemEffect(u32 itemId);
u32 GetItemHoldEffect(u32 itemId);
u32 GetItemHoldEffectParam(u32 itemId);
const u8 *GetItemDescription(u16 itemId);
u8 GetItemImportance(u16 itemId);
u8 GetItemConsumability(u16 itemId);
enum Pocket GetItemPocket(u16 itemId);
u8 GetItemType(u16 itemId);
ItemUseFunc GetItemFieldFunc(u16 itemId);
u8 GetItemBattleUsage(u16 itemId);
u32 GetItemSecondaryId(u32 itemId);
u32 GetItemFlingPower(u32 itemId);
u32 GetItemStatus1Mask(u16 itemId);
void DeserializeTmHmItemSlots(void); // PSF technicalmachine Branch
bool32 ItemHasVolatileFlag(u16 itemId, enum Volatile volatile);
u32 GetItemSellPrice(u32 itemId);
bool32 IsHoldEffectChoice(enum ItemHoldEffect holdEffect);

#endif // GUARD_ITEM_H
